[{"id":0,"href":"/docs/azuredevopsserver/azuredevopsserver/","title":"Azure Devops Server","section":"Docs","content":"Azure DevOps Server #  Azure DevOps Server previously known as Team Foundation Server (commonly abbreviated to TFS) is a Microsoft product that provides below capabilities.\n Requirements management Project management Source code management Automated builds Testing Release management Reporting  It covers the entire application lifecycle, and enables DevOps capabilities. ADO in Roche Diagnostics supports mainly with software development process by hosting Source control repository, Document Storage, Reporting, building and testing of software.\nAzure DevOps Server access #  There are multiple common GUIs available to access Azure DevOps Server :\n Internet Explorer\\Chrome (Web Access) Visual Studio IDE Eclipse IDE with Team Explorer Everywhere plugin MS Project/ MS Excel with Team Explorer plugin  Connect to Azure DevOps Server #  Azure DevOps Server :\nProduction : tfsprod Test : tfstest Team Project Collection Geography of the user base. E.g.: Mannheim, Boston Team Project Company.Department(2 Letters).Project e.g. Roche.FA.Solution_Center_RnD\nAll DNS names are part of the emea.roche.com domain #   Connections to the productive environment: Prod Environment Connections to the test environment: Test Environment  "},{"id":1,"href":"/docs/azuredevopsservice/agentpool/","title":"Agent Pool","section":"Docs","content":"Agent Pool #  Agent: Agent is a service which runs on a machine where we can build, deploy software using Azure Pipelines\nTwo types of agents: #   Microsoft-Hosted Agents Self-hosted agents  Microsoft-hosted agents: Microsoft-hosted agents that run Windows and Linux images are provisioned on Azure general purpose virtual machines with a 2 core CPU, 7 GB of RAM, and 14 GB of SSD disk space.\nSelf-hosted agents: An agent that is hosted in our local network machine with high and customized software configuration.\nAgent Pool: #  An agent pool is a collection of agents where we can manage group of agents. Agent pool is scoped to the entire organization where teams can share the agents across the projects\nCreate agent pools: (https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/pools-queues?view=azure-devops\u0026tabs=yaml%2Cbrowser#create-agent-pools)\nProject Scoped Agent Pool :\nAgent queue is scoped at project level. Every agent queue must have been linked with any one agent pool.\nPoints to be noted while creating pools:\n Organization administrators or Project administrators can create a new pool Pool name should always start with Project Name followed by Team/Activity/Purpose/Default… If pool name is not in accordance with the given pattern, will automatically gets deleted. A valid name is less than 128 characters in length and does not contain the following characters: \u0026lsquo;,\u0026rsquo;, \u0026lsquo;\u0026quot;\u0026rsquo;, \u0026lsquo;/\u0026rsquo;, \u0026lsquo;', \u0026lsquo;[\u0026rsquo;, \u0026lsquo;]\u0026rsquo;, \u0026lsquo;:\u0026rsquo;, \u0026lsquo;|\u0026rsquo;, \u0026lsquo;\u0026lt;\u0026rsquo;, \u0026lsquo;\u0026gt;\u0026rsquo;, \u0026lsquo;+\u0026rsquo;, \u0026lsquo;=\u0026rsquo;, \u0026lsquo;;\u0026rsquo;, \u0026lsquo;?\u0026rsquo;, \u0026lsquo;*\u0026rsquo;.  Please reach out to us either through ServiceNow or email for pools creation.\n"},{"id":2,"href":"/docs/azuredevopsservice/azuredevopsservice/","title":"Azure Devops Service","section":"Docs","content":"Azure DevOps Services #  Azure DevOps is a Microsoft product that provides developer services for allowing teams to plan work, collaborate on code development, and build and deploy applications. Azure DevOps supports a collaborative culture and set of processes that bring together developers, project managers, and contributors to develop software. It allows organizations to create and improve products at a faster pace than they can with traditional software development approaches.It covers the entire application life-cycle, and enables DevOps capabilities.We support both Azure DevOps Server(On premises) and Azure DevOps Servcies(Cloud).\n1.Continued heavy investment in Azure DevOps\n2.Best in class CI/CD solution across the industry\n3.Best \u0026amp; most reliable solution for managing development teams\n4.Tight integrations with GitHub\n5.Provide enterprise scalable package management\n6.Provide easy migration from/to GitHub\n7.Cloud hosted pipelines for Linux, MacOS,Windows\nAzure Boards #  Deliver value to your users faster using proven agile tools to plan, track, and discuss work across your teams.\nAzure Pipelines #  Build, test, and deploy with CI/CD that works with any language, platform, and cloud. Connect to GitHub or any other Git provider and deploy continuously.\nAzure Repos #  Get unlimited, cloud­hosted private Git repos and collaborate to build better code with pull requests and advanced file management.\nAzure Test Plans #  Test and ship with confidence using manual and exploratory testing tools.\nAzure Artifacts #  Create, host, and share packages with your team, and add artifacts to your CI/CD pipelines with a single click.\nAzure DevOps Services access #  There are multiple common GUIs available to access Azure DevOps Service :\n Login to Web Portal from browser (Ex: Chrome\\Edge) Team Explorer add­in to Visual Studio IDE Team Explorer Everywhere plugin MS Project/ MS Excel with Team Explorer plugin Third party tools  Get started: Connect to Azure DevOps Services #  Azure DevOps Service :\nOrganization­ Name of the Azure DevOps Services account. Typically you will have one Azure DevOps account and manage multiple Team projects within.\nTeam Project: To manage access control and split your code and pipelines from one and other Production : diaitads Test : RnDITSWDev [Prod Environment](https://dev.azure.com/diaitads/):- Connections to the productive environment: [Test Environment](https://dev.azure.com/RnDITSWDev):- Connections to the test environment and Test Organization are made available for any testing purposes.  Onboarding to Azure DevOps need: #   CornerStone Training DIARNDIT Toolchain: Streaming portal channel for the information and training videos (We are still working on it and will upload more videos ASAP).  Reach out to us for support #   ServiceNow Service Request To Raise Incident Woodpeckers Slack Link  "},{"id":3,"href":"/docs/dsc/dsc/","title":"Dsc","section":"Docs","content":"DSC #  Management platform provided by the Microsoft, also known as a powershell feature. DSC provides a set of Power Shell language extensions and cmdlets. The main idea is to provide a method for maintaining consistent configuration across computers or devices.Using central DSC server, projects can store OS configuration and use it several times across builds.Mainly used for configuration, deployment and management of systems and configuration.\nWoodpeckers team is supplying a complete solution for the business partners who would like to enhance their DSC practice. The offer consists of:\n HTTP DSC Pull Server for Configurations and LCM agent registration. Pull Server also has the capability to store agents' reports, which can be used in further processing. DSC Resources space, hosted as an SMB file share for storing custom modules and items.  Each business partner may count on a dedicated space with the above components.\nEnvironments #    DSC Test (dsctest.emea.roche.com:Dedicated port)\n Configuration: (dsctestconfiguration.emea.roche.com:Dedicated port) Reporting: (dsctestreporting.emea.roche.com:Dedicated port) Resources: (dsctestresources.emea.roche.com\\Dedicated file share)    DSC Production (dscprod.emea.roche.com:Dedicated port)\n Configuration: (dscprodconfiguration.emea.roche.com:Dedicated port) Reporting: (dscprodreporting.emea.roche.com:Dedicated port) Resources: (dscprodresources.emea.roche.com\\Dedicated file share)    Reach out to us for support #    Service Request\n  Raise an Issue\n  "},{"id":4,"href":"/docs/ear/ear/","title":"Ear","section":"Docs","content":"Enterprise Architect #  Sparx Systems Enterprise Architect is a visual modeling and design tool based on the OMG UML. The platform supports: the design and construction of software systems; modeling business processes; and modeling industry based domains.\nWhy use EAR? #  1.Fast Intuitive Modeling \u0026amp; Design\n2.Manage complex information\n3.Flexible and rich\n4.Model, manage and trace\n5.Load extremely large models in seconds 6.Collaborate effectively globally\nHow to use EAR? #  Download\nActivation Key:- W2W9\nLicense server:- ssks://rkamv1198\n"},{"id":5,"href":"/docs/github/github/","title":"Github","section":"Docs","content":"GitHub Enterprise Cloud #  GitHub Enterprise is a software development and version control using Git. It offers the distributed version control and source code management functionality of Git, plus its own features.\nWhy use GitHub? #  1.Setting up secure workflows\n2.Understanding the GitHub Flow\n3.Reviewing and discussing work\n4.Planning and tracking work\n5.Automating with GitHub Actions\n6.Integrating apps with GitHub\n7.Using the GitHub API\nHow to get Read Access #  Reader access to GitHub can be provided to your team by subscribing to the group GLOAZUGHAdmin_ReadOnly.\nNote : This group will be only used for Reader access and no other purpose, once innersource is enabled we will plug out this group and everyone would have the same access as this group by default.\nUsage: Once added you will have access to read internal respositories only of any organization in the enterprise\nRemember to remove all non-platform people from the ldap groups you are managing.\nHow to use AD group to manage members? #  AD group prefix is provided to teams when they are onboarded into GitHub. Once the AD group is made, it needs to go through a one time sync so that they are synced into GitHub, once that is done we can visit our organization and go to teams, here we create a new team and in the identity provider drop down we select the AD group that we want to link the team with.\nNow these teams are synced with AD groups and users can be onboarded directly into GitHub without having to provision the user seperately. This user sync might take 30-40 minutes so please wait after users are added into GitHub.\nHow to use AD group prefix to create groups? #   Login to Rada Go to Groups and select create new group Select a prefix and then choose create group Enter the group name, group description, select the group manager and create group After the group is created, please provide us with the Group name and your groups should sync with Github as soon as possible.  You can also visit this document.\nRaising a Support Ticket #   Service Request Incident  "},{"id":6,"href":"/docs/hyperv/hyperv/","title":"Hyper V","section":"Docs","content":"Hyper-V #  Hyper-V cluster is a set of several similar Hyper-V servers (called nodes), which can be specifically configured to work together, so that one node can take the load (VMs, services, processes) if another one goes down or if there is a disaster. Customers can request for virtual machines to consume in CI/CD pipelines. We provide a dedicated cluster to manage virtual machines by the team or we manage virtual machines in a shared cluster for the team.\nReach out to us for support #   Service now Service Request  To Raise Incident   "},{"id":7,"href":"/docs/innersource/innersource/","title":"Inner Source","section":"Docs","content":"Innersource within Roche #  What is Open Source? #  Open source projects are accessible to everyone. Anyone can use these open source softwares. They can also view, modify, and distribute a project for any purpose—as enforced by open source licenses. Similarly, anyone can help build open source software. In general, projects are developed by a community of distributed contributors who share code, feedback, bug reports, and more.\nWhat is innersource? #  An open source community behind our firewall\nInnersource is a development methodology where engineers build proprietary software using best practices from large-scale open source projects, like Kubernetes or Microsoft\u0026rsquo;s Visual Studio Code.\nWhat can we bring from opensource into innersource? #    Open collaboration encourages more contributions\nMore contributions mean more opportunities. Open source projects can accept changes from anybody in the world. That\u0026rsquo;s a lot of brainpower dedicated to advancing a project, meeting user needs, and finding and fixing bugs.\nSimilarly, innersource brings more ideas to the table. Teams can more easily innovate—and with more people inspecting code for errors and inconsistencies, they can build securer, more reliable software. Problems are found and fixed before the wrong person discovers them.\n  Developers don\u0026rsquo;t always have to start from scratch\nAnyone can discover and reuse open source projects for nearly any reason. People can even use them to build other things or modify them to suit their specific needs.\nSimilarly, innersource code helps your team discover, customize, and reuse existing internal projects. They can also establish and build on a shared set of documented processes to optimize the way your company deploys and uses software. This can lead to lower cost, greater flexibility, and an end to vendor lock-in.\n  Transparent decision-making builds process, trust, and alignment\nSuccessful open source maintainers document their decisions by default. Because each conversation has its own URL and a history of comments for context, time zones matter less, and developers can work asynchronously without skipping a beat.\nOpening up your projects brings a new level of transparency to your organization. Not only is the code visible but also the process and decision-making behind it. Well-documented conversations help developers on distributed teams get up to speed and start building. And with work happening in the open, collaboration can also include product managers, designers, security teams, and more.\n  Participation is critical\nThe success of any open source project depends on participation. There are many built-in reasons to contribute—to improve skills, find a mentor, or build a reputation, for example—but project maintainers also need to create a community culture that welcomes and encourages participation.\nWithin an enterprise, individual developers can pursue their interests, share ideas on a level playing field, and more easily learn from their peers. However, innersource also requires a cultural shift. Your team\u0026rsquo;s culture will need to encourage knowledge sharing and welcome contributions from across your organization.\n  Core development teams strengthen a project's process\nOpen source projects may have thousands of contributors and community members, but a much smaller team is usually responsible for the project\u0026rsquo;s overall direction. This speeds up decision-making and ensures that someone\u0026rsquo;s always responsible.\nFor innersource projects, distributing control across a smaller group of participants frequently makes approvals and reviews more effective. Creating a small, cross-functional team of decision makers can also help teams stick to quality standards and gain executive support.\n  InnerSource Best Practices: #  • Realistic vision, articulated shared purpose, and clearly defined problems or opportunities being addressed\n• Key participants (initiators, catalysts, evangelists) should have collaborative experience/mindset\n• Socialization model to help new participants acclimate\n• Programmatically facilitated continuous interaction and behavioral consistency\n• Start with an intra-organizational group of people with defined shared goals\nThe anatomy of an innersource project #  A typical innersource project will have the following Teams.\n Maintainers : Contributors who are responsible for driving the vision and managing the organizational aspects of the project. They are not necessarily the original owners or authors of the code. Contributors : Everyone who has contributed something back to the project. Community members : People who use the project. They might be active in conversations or express their opinion on the project\u0026rsquo;s direction.  Tools of the trade #  Here are a few tools that drive open source development on GitHub. They\u0026rsquo;ll also be key components of any innersource project.\n Issues : Issues are where developers bring up topics and start conversations. If someone finds a bug or has an idea for a new feature, an issue is a great place to start—and anyone with access to it can join in on the discussion. Pull requests : Pull requests are living conversations about changes that developers would like to make to a project. They\u0026rsquo;re where people start working on solutions and review changes that are in progress. Synchronous chat channels : Sometimes teams need to make quick decisions. Synchronous chat channels like Slack are complementary to discussions and comments on GitHub and great for talking through problems in real time.  How are we planning to bring innersource within Roche? #  We plan to have a separate organization( Roche-Innersource ) for all innersource projects. Each and every team member or contributor can view all the repositories in the organization and if they decide to commit to any of these projects you can add yourself to the group stated below and get started right away.\nHow to access the Organization? #  The organization will be open to everyone, but if you want to get added to a team into the organization you can visit and subscribe to this group here.\nReach out to us #  If you want to host a project please reach out to us at glosdpl_woodpeckers@msxdl.roche.com\n"},{"id":8,"href":"/docs/proget/proget/","title":"Proget","section":"Docs","content":"Proget #  ProGet helps you package applications and components so you can ensure your software is built only once, and then deployed consistently across environments. This means everyone can be certain that what goes to production is exactly what was built and tested. Third-party packages (such as NuGet, npm, PowerShell, and Chocolatey) and Docker containers are also supported, allowing you to enforce quality standards, monitor for open-source licenses, and scan for vulnerabilities across all packages, much earlier in the development cycle.\nProGet Tool provided by Inedo, provides central repository for different type of the packages eg. Nuget, Docker et. It helps with distributing applications and components (packages) across multiple environments(projects).\nMain Features #   Package Management across project.  Purpose #   Provides easy flow between creators, hosts and consumers.  Access to Proget-Nuget #   NugetProd : NugetProd  Reach out to us for support #   ServiceNow Request Raise an Incident  "},{"id":9,"href":"/docs/sonarqube/sonarqube/","title":"Sonarqube","section":"Docs","content":"Sonarqube #  SonarQube provides automated capabilities for continuous inspection of code, detect bugs, code smells and security vulnerabilities on 20+ programming languages, with the historical data and many features it gives enormous possibilities for the project to improve their code.\nMain Purpose #  Used across different projects, where the code quality can be easily measured and self maintained. SonarQube helps projects to understand the quality of their software and ensures the transparency of code. Properly used provides enormous value to the Project Team’s.\nAccessing SonarQube #  Main Portal - SonarQube Portal\nWe offer multiple environments: #   Sonarqube Test → for testing new features Sonarqube prod → stable environment (use rocheid and password to login)  Reach out to us for support #    Service Now Service Request\n  ServiceNow Incident\n  "}]